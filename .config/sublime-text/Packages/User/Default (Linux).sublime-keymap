[

  { "keys": ["alt+left"], "command": "move", "args": {"by": "words", "forward": false} },
  { "keys": ["alt+right"], "command": "move", "args": {"by": "word_ends", "forward": true} },
  { "keys": ["alt+shift+left"], "command": "move", "args": {"by": "words", "forward": false, "extend": true} },
  { "keys": ["alt+shift+right"], "command": "move", "args": {"by": "word_ends", "forward": true, "extend": true} },
  { "keys": ["alt+j"], "command": "move", "args": {"by": "words", "forward": false} },
  { "keys": ["alt+l"], "command": "move", "args": {"by": "word_ends", "forward": true} },
  { "keys": ["alt+shift+j"], "command": "move", "args": {"by": "words", "forward": false, "extend": true} },
  { "keys": ["alt+shift+l"], "command": "move", "args": {"by": "word_ends", "forward": true, "extend": true} },

  { "keys": ["super+left"], "command": "move_to", "args": {"to": "bol", "extend": false} },
  { "keys": ["super+right"], "command": "move_to", "args": {"to": "eol", "extend": false} },
  { "keys": ["super+shift+left"], "command": "move_to", "args": {"to": "bol", "extend": true} },
  { "keys": ["super+shift+right"], "command": "move_to", "args": {"to": "eol", "extend": true} },
  { "keys": ["ctrl+j"], "command": "move_to", "args": {"to": "bol", "extend": false} },
  { "keys": ["ctrl+l"], "command": "move_to", "args": {"to": "eol", "extend": false} },
  { "keys": ["ctrl+shift+j"], "command": "move_to", "args": {"to": "bol", "extend": true} },
  { "keys": ["ctrl+shift+l"], "command": "move_to", "args": {"to": "eol", "extend": true} },

  { "keys": ["super+up"], "command": "move_to", "args": {"to": "bof", "extend": false} },
  { "keys": ["super+down"], "command": "move_to", "args": {"to": "eof", "extend": false} },
  { "keys": ["ctrl+i"], "command": "move_to", "args": {"to": "bof", "extend": false} },
  { "keys": ["ctrl+k"], "command": "move_to", "args": {"to": "eof", "extend": false} },
  { "keys": ["ctrl+shift+i"], "command": "move_to", "args": {"to": "bof", "extend": true} },
  { "keys": ["ctrl+shift+k"], "command": "move_to", "args": {"to": "eof", "extend": true} },

  { "keys": ["super+d"], "command": "find_under_expand" },
  { "keys": ["home"], "command": "find_under_expand" },



  // ORIGAMI i/j/k/l as up/left/down/right #####################################################

  { "keys": ["super+h", "i"], "command": "travel_to_pane", "args": {"direction": "up"} },
  { "keys": ["super+h", "l"], "command": "travel_to_pane", "args": {"direction": "right"} },
  { "keys": ["super+h", "k"], "command": "travel_to_pane", "args": {"direction": "down"} },
  { "keys": ["super+h", "j"], "command": "travel_to_pane", "args": {"direction": "left"} },

  { "keys": ["super+h", "I"], "command": "carry_file_to_pane", "args": {"direction": "up"} },
  { "keys": ["super+h", "L"], "command": "carry_file_to_pane", "args": {"direction": "right"} },
  { "keys": ["super+h", "K"], "command": "carry_file_to_pane", "args": {"direction": "down"} },
  { "keys": ["super+h", "J"], "command": "carry_file_to_pane", "args": {"direction": "left"} },

  { "keys": ["super+h", "alt+i"], "command": "clone_file_to_pane", "args": {"direction": "up"} },
  { "keys": ["super+h", "alt+l"], "command": "clone_file_to_pane", "args": {"direction": "right"} },
  { "keys": ["super+h", "alt+k"], "command": "clone_file_to_pane", "args": {"direction": "down"} },
  { "keys": ["super+h", "alt+j"], "command": "clone_file_to_pane", "args": {"direction": "left"} },
  // You can also create the pane automatically with the following command (insert empty parameters):
  // { "keys": [], "command": "create_pane_with_cloned_file", "args": {"direction": ""} }

  { "keys": ["super+h", "super+i"], "command": "create_pane", "args": {"direction": "up"} },
  { "keys": ["super+h", "super+l"], "command": "create_pane", "args": {"direction": "right"} },
  { "keys": ["super+h", "super+h"], "command": "create_pane", "args": {"direction": "down"} },
  { "keys": ["super+h", "super+j"], "command": "create_pane", "args": {"direction": "left"} },
  // You can also add  "give_focus": true to automatically focus on the new pane as follows:
  // { "keys": [], "command": "create_pane", "args": {"direction": "", "give_focus": true} }

  { "keys": ["super+h", "super+shift+i"], "command": "destroy_pane", "args": {"direction": "up"} },
  { "keys": ["super+h", "super+shift+l"], "command": "destroy_pane", "args": {"direction": "right"} },
  { "keys": ["super+h", "super+shift+k"], "command": "destroy_pane", "args": {"direction": "down"} },
  { "keys": ["super+h", "super+shift+j"], "command": "destroy_pane", "args": {"direction": "left"} },
  // You can also destroy the current pane by binding the following command:
  // { "keys": [], "command": "destroy_pane", "args": {"direction": "self"} },

  { "keys": ["super+h", "super+alt+i"], "command": "create_pane_with_file", "args": {"direction": "up"} },
  { "keys": ["super+h", "super+alt+l"], "command": "create_pane_with_file", "args": {"direction": "right"} },
  { "keys": ["super+h", "super+alt+k"], "command": "create_pane_with_file", "args": {"direction": "down"} },
  { "keys": ["super+h", "super+alt+j"], "command": "create_pane_with_file", "args": {"direction": "left"} },

  // ORIGAMI ARROW KEYS ################################################################################

  { "keys": ["super+h", "up"], "command": "travel_to_pane", "args": {"direction": "up"} },
  { "keys": ["super+h", "right"], "command": "travel_to_pane", "args": {"direction": "right"} },
  { "keys": ["super+h", "down"], "command": "travel_to_pane", "args": {"direction": "down"} },
  { "keys": ["super+h", "left"], "command": "travel_to_pane", "args": {"direction": "left"} },

  { "keys": ["super+h", "shift+up"], "command": "carry_file_to_pane", "args": {"direction": "up"} },
  { "keys": ["super+h", "shift+right"], "command": "carry_file_to_pane", "args": {"direction": "right"} },
  { "keys": ["super+h", "shift+down"], "command": "carry_file_to_pane", "args": {"direction": "down"} },
  { "keys": ["super+h", "shift+left"], "command": "carry_file_to_pane", "args": {"direction": "left"} },

  { "keys": ["super+h", "ctrl+up"], "command": "clone_file_to_pane", "args": {"direction": "up"} },
  { "keys": ["super+h", "ctrl+right"], "command": "clone_file_to_pane", "args": {"direction": "right"} },
  { "keys": ["super+h", "ctrl+down"], "command": "clone_file_to_pane", "args": {"direction": "down"} },
  { "keys": ["super+h", "ctrl+left"], "command": "clone_file_to_pane", "args": {"direction": "left"} },
  // You can also create the pane automatically with the following command (insert empty parameters):
  // { "keys": [], "command": "create_pane_with_cloned_file", "args": {"direction": ""} }

  { "keys": ["super+h", "super+up"], "command": "create_pane", "args": {"direction": "up"} },
  { "keys": ["super+h", "super+right"], "command": "create_pane", "args": {"direction": "right"} },
  { "keys": ["super+h", "super+down"], "command": "create_pane", "args": {"direction": "down"} },
  { "keys": ["super+h", "super+left"], "command": "create_pane", "args": {"direction": "left"} },
  // You can also add  "give_focus": true to automatically focus on the new pane as follows:
  // { "keys": [], "command": "create_pane", "args": {"direction": "", "give_focus": true} }

  { "keys": ["super+h", "super+shift+up"], "command": "destroy_pane", "args": {"direction": "up"} },
  { "keys": ["super+h", "super+shift+right"], "command": "destroy_pane", "args": {"direction": "right"} },
  { "keys": ["super+h", "super+shift+down"], "command": "destroy_pane", "args": {"direction": "down"} },
  { "keys": ["super+h", "super+shift+left"], "command": "destroy_pane", "args": {"direction": "left"} },
  // You can also destroy the current pane by binding the following command:
  // { "keys": [], "command": "destroy_pane", "args": {"direction": "self"} },

  { "keys": ["super+h", "super+ctrl+up"], "command": "create_pane_with_file", "args": {"direction": "up"} },
  { "keys": ["super+h", "super+ctrl+right"], "command": "create_pane_with_file", "args": {"direction": "right"} },
  { "keys": ["super+h", "super+ctrl+down"], "command": "create_pane_with_file", "args": {"direction": "down"} },
  { "keys": ["super+h", "super+ctrl+left"], "command": "create_pane_with_file", "args": {"direction": "left"} },

  { "keys": ["super+ctrl+f"], "command": "js_prettier" },

  {
    "keys": ["shift+super+g"],
    "command": "emmet_wrap_with_abbreviation",
    "context": [{"key": "setting.is_widget",  "operand": false }]
  },

  {
    "keys": ["shift+super+."],
    "command": "emmet_go_to_edit_point"
  },
  {
    "keys": ["super+shift+c"],
    "command": "center_comment"
  },

  // Change ctrl as primary key to super
  { "keys": ["super+q"], "command": "exit" },

  { "keys": ["super+shift+n"], "command": "new_window" },
  { "keys": ["super+shift+w"], "command": "close_window" },
  { "keys": ["open"], "command": "prompt_open_file" },
  { "keys": ["super+o"], "command": "prompt_open_file" },
  { "keys": ["super+shift+t"], "command": "reopen_last_file" },
  { "keys": ["alt+o"], "command": "switch_file", "args": {"extensions": ["cpp", "cxx", "cc", "c", "hpp", "hxx", "hh", "h", "ipp", "inl", "m", "mm"]} },
  { "keys": ["alt+shift+o"], "command": "switch_file", "args": {"extensions": ["cpp", "cxx", "cc", "c", "hpp", "hxx", "hh", "h", "ipp", "inl", "m", "mm"], "side_by_side": true} },
  { "keys": ["super+n"], "command": "new_file" },
  { "keys": ["save"], "command": "save", "args": { "async": true } },
  { "keys": ["super+s"], "command": "save", "args": { "async": true } },
  { "keys": ["super+shift+s"], "command": "prompt_save_as" },
  { "keys": ["super+f4"], "command": "close_file" },
  { "keys": ["close"], "command": "close" },
  { "keys": ["close"], "command": "close_transient", "context":
    [
      { "key": "group_has_transient_sheet", "operator": "equal", "operand": true }
    ]
  },
  { "keys": ["super+w"], "command": "close" },
  { "keys": ["super+w"], "command": "close_transient", "context":
    [
      { "key": "group_has_transient_sheet", "operator": "equal", "operand": true }
    ]
  },
  { "keys": ["super+h", "super+b"], "command": "toggle_side_bar" },
  { "keys": ["undo"], "command": "undo" },
  { "keys": ["super+z"], "command": "undo" },
  { "keys": ["super+shift+z"], "command": "redo" },
  { "keys": ["redo"], "command": "redo_or_repeat" },
  { "keys": ["super+y"], "command": "redo_or_repeat" },

  { "keys": ["alt+backspace"], "command": "delete_word", "args": { "forward": false } },
  { "keys": ["super+backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete to Hard BOL.sublime-macro"} },
  { "keys": ["alt+u"], "command": "delete_word", "args": { "forward": false } },
  { "keys": ["ctrl+u"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete to Hard BOL.sublime-macro"} },

  { "keys": ["shift+delete"], "command": "cut" },
  { "keys": ["super+insert"], "command": "copy" },

  { "keys": ["cut"], "command": "cut" },
  { "keys": ["super+x"], "command": "cut" },
  { "keys": ["copy"], "command": "copy" },
  { "keys": ["super+c"], "command": "copy" },
  { "keys": ["paste"], "command": "paste" },
  { "keys": ["super+v"], "command": "paste" },
  { "keys": ["super+shift+v"], "command": "paste_and_indent" },
  { "keys": ["super+k", "super+v"], "command": "paste_from_history" },

  { "keys": ["ctrl+tab"], "command": "next_view_in_stack" },
  { "keys": ["ctrl+shift+tab"], "command": "prev_view_in_stack" },

  { "keys": ["super+a"], "command": "select_all" },
  { "keys": ["super+shift+l"], "command": "split_selection_into_lines" },

  { "keys": ["ctrl+]"], "command": "indent" },
  { "keys": ["ctrl+["], "command": "unindent" },

  { "keys": ["insert"], "command": "toggle_overwrite" },

  { "keys": ["super+l"], "command": "expand_selection", "args": {"to": "line"} },
  { "keys": ["super+d"], "command": "find_under_expand" },
  { "keys": ["super+k", "ctrl+d"], "command": "find_under_expand_skip" },
  { "keys": ["super+shift+space"], "command": "expand_selection", "args": {"to": "scope"} },
  { "keys": ["super+shift+a"], "command": "expand_selection", "args": {"to": "smart"} },
  { "keys": ["super+shift+m"], "command": "expand_selection", "args": {"to": "brackets"} },
  { "keys": ["super+m"], "command": "move_to", "args": {"to": "brackets"} },
  { "keys": ["super+shift+a"], "command": "expand_selection", "args": {"to": "tag"}, "context":
    [
      { "key": "selector", "operator": "equal", "operand": "(text.html, text.xml) - source", "match_all": true }
    ]
  },
  { "keys": ["super+p"], "command": "show_overlay", "args": {"overlay": "goto", "show_files": true} },
  { "keys": ["super+shift+p"], "command": "show_overlay", "args": {"overlay": "command_palette"} },
  { "keys": ["super+alt+p"], "command": "prompt_select_workspace" },
  { "keys": ["super+r"], "command": "show_overlay", "args": {"overlay": "goto", "text": "@"} },
  { "keys": ["super+g"], "command": "show_overlay", "args": {"overlay": "goto", "text": ":"} },
  { "keys": ["super+;"], "command": "show_overlay", "args": {"overlay": "goto", "text": "#"} },

  { "keys": ["super+shift+r"], "command": "goto_symbol_in_project" },

  { "keys": ["super+i"], "command": "show_panel", "args": {"panel": "incremental_find", "reverse": false} },
  { "keys": ["super+shift+i"], "command": "show_panel", "args": {"panel": "incremental_find", "reverse": true} },
  { "keys": ["find"], "command": "show_panel", "args": {"panel": "find", "reverse": false} },
  { "keys": ["super+f"], "command": "show_panel", "args": {"panel": "find", "reverse": false} },
  { "keys": ["super+h"], "command": "show_panel", "args": {"panel": "replace", "reverse": false} },
  { "keys": ["super+shift+h"], "command": "replace_next" },
  { "keys": ["f3"], "command": "find_next" },
  { "keys": ["shift+f3"], "command": "find_prev" },
  { "keys": ["super+f3"], "command": "find_under" },
  { "keys": ["super+shift+f3"], "command": "find_under_prev" },
  { "keys": ["alt+f3"], "command": "find_all_under" },
  { "keys": ["super+e"], "command": "slurp_find_string" },
  { "keys": ["super+shift+e"], "command": "slurp_replace_string" },
  { "keys": ["super+shift+f"], "command": "show_panel", "args": {"panel": "find_in_files"} },

  { "keys": ["super+."], "command": "next_modification" },
  { "keys": ["super+,"], "command": "prev_modification" },
  { "keys": ["super+k", "super+z"], "command": "revert_hunk" },
  { "keys": ["super+k", "super+shift+z"], "command": "revert_modification" },
  { "keys": ["super+k", "super+/"], "command": "toggle_inline_diff" },
  { "keys": ["super+k", "super+;"], "command": "toggle_inline_diff", "args": { "prefer_hide": true } },

  { "keys": ["super+/"], "command": "toggle_comment", "args": { "block": false } },
  { "keys": ["super+shift+/"], "command": "toggle_comment", "args": { "block": true } },

  { "keys": ["super+j", "super+j"], "command": "primary_j_changed" },
  { "keys": ["super+shift+j"], "command": "join_lines" },
  { "keys": ["super+shift+d"], "command": "duplicate_line" },

  { "keys": ["ctrl+`"], "command": "show_panel", "args": {"panel": "console", "toggle": true} },

  { "keys": ["super+k", "super+u"], "command": "upper_case" },
  { "keys": ["super+k", "super+l"], "command": "lower_case" },

  { "keys": ["super+k", "super+space"], "command": "set_mark" },
  { "keys": ["super+k", "super+a"], "command": "select_to_mark" },
  { "keys": ["super+k", "super+w"], "command": "delete_to_mark" },
  { "keys": ["super+k", "super+x"], "command": "swap_with_mark" },
  { "keys": ["super+k", "super+y"], "command": "yank" },
  { "keys": ["super+k", "super+k"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete to Hard EOL.sublime-macro"} },
  { "keys": ["super+k", "super+backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete to Hard BOL.sublime-macro"} },
  { "keys": ["super+k", "super+g"], "command": "clear_bookmarks", "args": {"name": "mark"} },
  { "keys": ["super+k", "super+c"], "command": "show_at_center" },

  { "keys": ["super++"], "command": "increase_font_size" },
  { "keys": ["super+="], "command": "increase_font_size" },
  { "keys": ["super+-"], "command": "decrease_font_size" },

  { "keys": ["super+shift+["], "command": "fold" },
  { "keys": ["super+shift+]"], "command": "unfold" },
  { "keys": ["super+k", "super+1"], "command": "fold_by_level", "args": {"level": 1} },
  { "keys": ["super+k", "super+2"], "command": "fold_by_level", "args": {"level": 2} },
  { "keys": ["super+k", "super+3"], "command": "fold_by_level", "args": {"level": 3} },
  { "keys": ["super+k", "super+4"], "command": "fold_by_level", "args": {"level": 4} },
  { "keys": ["super+k", "super+5"], "command": "fold_by_level", "args": {"level": 5} },
  { "keys": ["super+k", "super+6"], "command": "fold_by_level", "args": {"level": 6} },
  { "keys": ["super+k", "super+7"], "command": "fold_by_level", "args": {"level": 7} },
  { "keys": ["super+k", "super+8"], "command": "fold_by_level", "args": {"level": 8} },
  { "keys": ["super+k", "super+9"], "command": "fold_by_level", "args": {"level": 9} },
  { "keys": ["super+k", "super+0"], "command": "unfold_all" },
  { "keys": ["super+k", "super+j"], "command": "unfold_all" },
  { "keys": ["super+k", "super+t"], "command": "fold_tag_attributes" }
]
